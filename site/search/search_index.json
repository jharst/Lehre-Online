<<<<<<< Updated upstream
{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"about/","title":"VL Liebe in der Literaturgeschichte","text":"<p>Liebe l\u00e4sst sich wissenschaftlich als Kommunikationsph\u00e4nomen untersuchen. Sie ist nicht nur ein Modus der Interaktion von Menschen, sondern zeichnet sich durch eine spezifische Selbstreflexivit\u00e4t aus: Das liebste Gespr\u00e4chsthema von Liebenden ist ihre Liebe. So will es zumindest die Literatur, die in allen Epochen und Kulturen Liebende in der Auseinandersetzung mit ihren Gef\u00fchlen zeigt \u2013 und damit nicht unwesentlich an der Gestaltung von Liebesdiskursen beteiligt ist. </p> <p>Am Leitfaden der Liebe als Thema literarischer Texte f\u00fchrt die Vorlesung in die Geschichte der europ\u00e4ischen Literatur von der Antike bis heute ein. Dabei soll ein grunds\u00e4tzliches Verst\u00e4ndnis f\u00fcr Literatur in ihren gesellschaftshistorischen Zusammenh\u00e4ngen, in ihren gr\u00f6\u00dferen epochalen Dimensionen und in ihren kulturspezifischen Kontexten vermittelt werden. Zentrale Fragen sind daher die folgenden: Wie werden bestimmte Stoffe und Gattungen \u00fcber kulturelle und historische Grenzen hinweg bearbeitet und weitergeschrieben? Wie sind solche Epochen und Str\u00f6mungen miteinander verkn\u00fcpft und inwiefern bedingen sie sich gegenseitig? In welchem Verh\u00e4ltnis stehen die literarischen Texte zu anderen K\u00fcnsten und Wissenschaften? Und schlie\u00dflich, (wie) wirkt die Literatur auf die historische \u201aWirklichkeit\u2019 zur\u00fcck? </p> <ul> <li>(Harst 2024)<sup>1</sup></li> <li>(Harst 2023)<sup>2</sup></li> <li>@Harst-2024c</li> </ul> <p>Und er hat auch viele schlaue Sachen gesagt.<sup>3</sup></p> <pre><code>gantt\n    title Literarische Epochen und Werke\n    dateFormat  YYYY\n    axisFormat  %Y\n    tickInterval 50y\n    section Epochen\n    Barock            :a1, 1600, 1650\n    Aufkl\u00e4rung        :a2, 1650, 1800\n    Empfindsamkeit    :a3, 1740, 1780\n    Sturm und Drang   :a4, 1765, 1785\n    section Werke\n    * Werther erscheint : milestone, werther, 1774, 1d</code></pre>"},{"location":"about/#diagramm","title":"Diagramm","text":"<pre><code>graph LR\n  A[Start] --&gt; B{Error?};\n  B --&gt;|Yes| C[Hmm...];\n  C --&gt; D[Debug];\n  D --&gt; B;\n  B ----&gt;|No| E[Yay!];</code></pre> <p>Dies ist ein Beispieltext, der um das Bild herumflie\u00dft.Dies ist ein Beispieltext, der um das Bild herumflie\u00dft.Dies ist ein Beispieltext, der um das Bild herumflie\u00dft.Dies ist ein Beispieltext, der um das Bild herumflie\u00dft.Dies ist ein Beispieltext, der um das Bild herumflie\u00dft.Dies ist ein Beispieltext, der um das Bild herumflie\u00dft.</p> <p>Dies ist ein Beispieltext, der um das Bild herumflie\u00dft.Dies ist ein Beispieltext, der um das Bild herumflie\u00dft.Dies ist ein Beispieltext, der um das Bild herumflie\u00dft.Dies ist ein Beispieltext, der um das Bild herumflie\u00dft.Dies ist ein Beispieltext, der um das Bild herumflie\u00dft.Dies ist ein Beispieltext, der um das Bild herumflie\u00dft.</p>"},{"location":"about/#bibliografie","title":"Bibliografie","text":"<ol> <li> <p>Harst, Joachim. 2024. \u201cGeschichte Und Gesichtlichkeit. (De-)figurationen Nach Auerbach.\u201d In \u201cLeib Der Zeit.\u201d Ans\u00e4tze Und Fortschreibungen Erich Auerbachs, edited by Anja Lemke, 99\u2013116. G\u00f6ttingen: Wallstein.\u00a0\u21a9</p> </li> <li> <p>Harst, Joachim. 2023. \u201cMachine Analysis: Westworld and the Media History of Psychoanalysis.\u201d In Therapie Der Dinge? Materialit\u00e4t Der Psychoanalyse in Literatur Und Den Bildenden K\u00fcnsten, edited by Martin Bartelmus and Friederike Danebrock, 209\u201322. Bielefeld: transcript. https://doi.org/10.14361/9783839464762-011.\u00a0\u21a9</p> </li> <li> <p>Referenz in der Fu\u00dfnote.\u00a0\u21a9</p> </li> </ol>"}]}
=======
{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"#testing-this","title":"Testing this","text":"<ul> <li>VL Literaturgeschichte 2</li> <li>\u00dc Textverarbeitung 1</li> <li></li> </ul>"},{"location":"about/","title":"VL Liebe in der Literaturgeschichte","text":"<p>Liebe l\u00e4sst sich wissenschaftlich als Kommunikationsph\u00e4nomen untersuchen. Sie ist nicht nur ein Modus der Interaktion von Menschen, sondern zeichnet sich durch eine spezifische Selbstreflexivit\u00e4t aus: Das liebste Gespr\u00e4chsthema von Liebenden ist ihre Liebe. So will es zumindest die Literatur, die in allen Epochen und Kulturen Liebende in der Auseinandersetzung mit ihren Gef\u00fchlen zeigt \u2013 und damit nicht unwesentlich an der Gestaltung von Liebesdiskursen beteiligt ist. </p> <p>Am Leitfaden der Liebe als Thema literarischer Texte f\u00fchrt die Vorlesung in die Geschichte der europ\u00e4ischen Literatur von der Antike bis heute ein. Dabei soll ein grunds\u00e4tzliches Verst\u00e4ndnis f\u00fcr Literatur in ihren gesellschaftshistorischen Zusammenh\u00e4ngen, in ihren gr\u00f6\u00dferen epochalen Dimensionen und in ihren kulturspezifischen Kontexten vermittelt werden. Zentrale Fragen sind daher die folgenden: Wie werden bestimmte Stoffe und Gattungen \u00fcber kulturelle und historische Grenzen hinweg bearbeitet und weitergeschrieben? Wie sind solche Epochen und Str\u00f6mungen miteinander verkn\u00fcpft und inwiefern bedingen sie sich gegenseitig? In welchem Verh\u00e4ltnis stehen die literarischen Texte zu anderen K\u00fcnsten und Wissenschaften? Und schlie\u00dflich, (wie) wirkt die Literatur auf die historische \u201aWirklichkeit\u2019 zur\u00fcck? </p> <ul> <li>(Harst 2024)<sup>1</sup></li> <li>(Harst 2023)<sup>2</sup></li> <li>@Harst-2024c</li> </ul> <p>Und er hat auch viele schlaue Sachen gesagt.<sup>3</sup></p> <pre><code>gantt\n    title Literarische Epochen und Werke\n    dateFormat  YYYY\n    axisFormat  %Y\n    tickInterval 50y\n    section Epochen\n    Barock            :a1, 1600, 1650\n    Aufkl\u00e4rung        :a2, 1650, 1800\n    Empfindsamkeit    :a3, 1740, 1780\n    Sturm und Drang   :a4, 1765, 1785\n    section Werke\n    * Werther erscheint : milestone, werther, 1774, 1d</code></pre>"},{"location":"about/#diagramm","title":"Diagramm","text":"<pre><code>graph LR\n  A[Start] --&gt; B{Error?};\n  B --&gt;|Yes| C[Hmm...];\n  C --&gt; D[Debug];\n  D --&gt; B;\n  B ----&gt;|No| E[Yay!];</code></pre> <p>Dies ist ein Beispieltext, der um das Bild herumflie\u00dft.Dies ist ein Beispieltext, der um das Bild herumflie\u00dft.Dies ist ein Beispieltext, der um das Bild herumflie\u00dft.Dies ist ein Beispieltext, der um das Bild herumflie\u00dft.Dies ist ein Beispieltext, der um das Bild herumflie\u00dft.Dies ist ein Beispieltext, der um das Bild herumflie\u00dft.</p> <p>Dies ist ein Beispieltext, der um das Bild herumflie\u00dft.Dies ist ein Beispieltext, der um das Bild herumflie\u00dft.Dies ist ein Beispieltext, der um das Bild herumflie\u00dft.Dies ist ein Beispieltext, der um das Bild herumflie\u00dft.Dies ist ein Beispieltext, der um das Bild herumflie\u00dft.Dies ist ein Beispieltext, der um das Bild herumflie\u00dft.</p>"},{"location":"about/#bibliografie","title":"Bibliografie","text":"<ol> <li> <p>Harst, Joachim. 2024. \u201cGeschichte Und Gesichtlichkeit. (De-)figurationen Nach Auerbach.\u201d In \u201cLeib Der Zeit.\u201d Ans\u00e4tze Und Fortschreibungen Erich Auerbachs, edited by Anja Lemke, 99\u2013116. G\u00f6ttingen: Wallstein.\u00a0\u21a9</p> </li> <li> <p>Harst, Joachim. 2023. \u201cMachine Analysis: Westworld and the Media History of Psychoanalysis.\u201d In Therapie Der Dinge? Materialit\u00e4t Der Psychoanalyse in Literatur Und Den Bildenden K\u00fcnsten, edited by Martin Bartelmus and Friederike Danebrock, 209\u201322. Bielefeld: transcript. https://doi.org/10.14361/9783839464762-011.\u00a0\u21a9</p> </li> <li> <p>Referenz in der Fu\u00dfnote.\u00a0\u21a9</p> </li> </ol>"},{"location":"plugin/chalkboard/","title":"Chalkboard","text":"<p>With this plugin you can add a chalkboard to reveal.js. The plugin provides two possibilities to include handwritten notes to your presentation:</p> <ul> <li>you can make notes directly on the slides, e.g. to comment on certain aspects,</li> <li>you can open a chalkboard or whiteboard on which you can make notes.</li> </ul> <p>The main use case in mind when implementing the plugin is classroom usage in which you may want to explain some course content and quickly need to make some notes.</p> <p>The plugin records all drawings made so that they can be play backed using the <code>autoSlide</code> feature or the <code>audio-slideshow</code> plugin.</p> <p>Check out the live demo</p> <p>The chalkboard effect is based on Chalkboard by Mohamed Moustafa.</p>"},{"location":"plugin/chalkboard/#installation","title":"Installation","text":"<p>Copy the file <code>plugin.js</code> and the  <code>img</code> directory into the plugin folder of your reveal.js presentation, i.e. <code>plugin/chalkboard</code> and load the plugin as shown below.</p> <pre><code>&lt;script src=\"plugin/chalkboard/plugin.js\"&gt;&lt;/script&gt;\n&lt;script src=\"plugin/chalkboard/customcontrols.js\"&gt;&lt;/script&gt;\n\n&lt;script&gt;\n    Reveal.initialize({\n        // ...\n        plugins: [ RevealChalkboard, RevealCustomControls ],\n        // ...\n    });\n&lt;/script&gt;\n</code></pre> <p>The following stylesheet <pre><code>&lt;link rel=\"stylesheet\" href=\"plugin/chalkboard/style.css\"&gt;\n&lt;link rel=\"stylesheet\" href=\"plugin/customcontrols/style.css\"&gt;\n</code></pre> has to be included to the <code>head</code> section of you HTML-file.</p> <p>In order to include buttons for opening and closing the notes canvas or the chalkboard you should make sure that <code>font-awesome</code> is available. The easiest way is to include <pre><code>&lt;link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css\"&gt;\n</code></pre> to the <code>head</code> section of you HTML-file.</p>"},{"location":"plugin/chalkboard/#usage","title":"Usage","text":""},{"location":"plugin/chalkboard/#mouse-or-touch","title":"Mouse or touch","text":"<ul> <li>Click on the pen symbols at the bottom left to toggle the notes canvas or chalkboard</li> <li>Click on the color picker at the left to change the color (the color picker is only visible if the notes canvas or chalkboard is active)</li> <li>Click on the up/down arrows on the left to the switch among multiple chalkboardd (the up/down arrows are only available for the chlakboard)</li> <li>Click the left mouse button and drag to write on notes canvas or chalkboard</li> <li>Click the right mouse button and drag to wipe away previous drawings</li> <li>Touch and move to write on notes canvas or chalkboard</li> <li>Touch and hold for half a second, then move to wipe away previous drawings</li> </ul>"},{"location":"plugin/chalkboard/#keyboard","title":"Keyboard","text":"<ul> <li>Press the \u2018BACKSPACE\u2019 key to delete all chalkboard drawings</li> <li>Press the \u2018DEL\u2019 key to clear the notes canvas or chalkboard</li> <li>Press the \u2018c\u2019 key to toggle the notes canvas</li> <li>Press the \u2018b\u2019 key to toggle the chalkboard</li> <li>Press the \u2018d\u2019 key to download drawings</li> <li>Press the \u2018x\u2019 key to cycle colors forward</li> <li>Press the \u2018y\u2019 key to cycle colors backward</li> </ul>"},{"location":"plugin/chalkboard/#playback","title":"Playback","text":"<p>If the <code>autoSlide</code> feature is set or if the <code>audio-slideshow</code> plugin is used, pre-recorded chalkboard drawings can be played. The slideshow plays back the user interaction with the chalkboard in the same way as it was conducted when recording the data.</p>"},{"location":"plugin/chalkboard/#multiplexing","title":"Multiplexing","text":"<p>The plugin supports multiplexing via the <code>multiplex</code> plugin or the <code>seminar</code> plugin.</p>"},{"location":"plugin/chalkboard/#pdf-export","title":"PDF-Export","text":"<p>If the slideshow is opened in print mode, the chalkboard drawings in the session storage (see <code>storage</code> option - print version must be opened in the same tab or window as the original slideshow) or provided in a file (see <code>src</code> option) are included in the PDF-file. Each drawing on the chalkboard is added after the slide that was shown when opening the chalkboard. Drawings on the notes canvas are not included in the PDF-file.</p>"},{"location":"plugin/chalkboard/#configuration","title":"Configuration","text":"<p>The plugin has several configuration options:</p> <ul> <li><code>boardmarkerWidth</code>: an integer, the drawing width of the boardmarker; larger values draw thicker lines.</li> <li><code>chalkWidth</code>: an integer, the drawing width of the chalk; larger values draw thicker lines.</li> <li><code>chalkEffect</code>: a float in the range <code>[0.0, 1.0]</code>, the intesity of the chalk effect on the chalk board. Full effect (default) <code>1.0</code>, no effect <code>0.0</code>.</li> <li><code>storage</code>: Optional variable name for session storage of drawings.</li> <li><code>src</code>: Optional filename for pre-recorded drawings.</li> <li><code>readOnly</code>: Configuation option allowing to prevent changes to existing drawings. If set to <code>true</code> no changes can be made, if set to false <code>false</code> changes can be made, if unset or set to <code>undefined</code> no changes to the drawings can be made after returning to a slide or fragment for which drawings had been recorded before. In any case the recorded drawings for a slide or fragment can be cleared by pressing the \u2018DEL\u2019 key (i.e. by using the <code>RevealChalkboard.clear()</code> function).</li> <li><code>transition</code>: Gives the duration (in milliseconds) of the transition for a slide change, so that the notes canvas is drawn after the transition is completed.</li> <li><code>theme</code>: Can be set to either <code>\"chalkboard\"</code> or <code>\"whiteboard\"</code>.</li> </ul> <p>The following configuration options allow to change the appearance of the notes canvas and the chalkboard. All of these options require two values, the first gives the value for the notes canvas, the second for the chalkboard.</p> <ul> <li><code>background</code>: The first value expects a (semi-)transparent color which is used to provide visual feedback that the notes canvas is enabled, the second value expects a filename to a background image for the chalkboard.</li> <li><code>grid</code>: By default whiteboard and chalkboard themes include a grid pattern on the background. This pattern can be modified by setting the color, the distance between lines, and the line width, e.g. <code>{ color: 'rgb(127,127,255,0.1)', distance: 40, width: 2}</code>. Alternatively, the grid can be removed by setting the value to <code>false</code>.</li> <li><code>eraser</code>: An image path and radius for the eraser.</li> <li><code>boardmarkers</code>: A list of boardmarkers with given color and cursor.</li> <li><code>chalks</code>: A list of chalks with given color and cursor.</li> <li><code>rememberColor</code>: Whether to remember the last selected color for the slide canvas or the board.</li> </ul> <p>All of the configurations are optional and the default values shown below are used if the options are not provided.</p> <pre><code>Reveal.initialize({\n    // ...\n    chalkboard: {\n        boardmarkerWidth: 3,\n        chalkWidth: 7,\n        chalkEffect: 1.0,\n        storage: null,\n        src: null,\n        readOnly: undefined,\n        transition: 800,\n        theme: \"chalkboard\",\n        background: [ 'rgba(127,127,127,.1)' , path + 'img/blackboard.png' ],\n        grid: { color: 'rgb(50,50,10,0.5)', distance: 80, width: 2},\n        eraser: { src: path + 'img/sponge.png', radius: 20},\n        boardmarkers : [\n                { color: 'rgba(100,100,100,1)', cursor: 'url(' + path + 'img/boardmarker-black.png), auto'},\n                { color: 'rgba(30,144,255, 1)', cursor: 'url(' + path + 'img/boardmarker-blue.png), auto'},\n                { color: 'rgba(220,20,60,1)', cursor: 'url(' + path + 'img/boardmarker-red.png), auto'},\n                { color: 'rgba(50,205,50,1)', cursor: 'url(' + path + 'img/boardmarker-green.png), auto'},\n                { color: 'rgba(255,140,0,1)', cursor: 'url(' + path + 'img/boardmarker-orange.png), auto'},\n                { color: 'rgba(150,0,20150,1)', cursor: 'url(' + path + 'img/boardmarker-purple.png), auto'},\n                { color: 'rgba(255,220,0,1)', cursor: 'url(' + path + 'img/boardmarker-yellow.png), auto'}\n        ],\n        chalks: [\n                { color: 'rgba(255,255,255,0.5)', cursor: 'url(' + path + 'img/chalk-white.png), auto'},\n                { color: 'rgba(96, 154, 244, 0.5)', cursor: 'url(' + path + 'img/chalk-blue.png), auto'},\n                { color: 'rgba(237, 20, 28, 0.5)', cursor: 'url(' + path + 'img/chalk-red.png), auto'},\n                { color: 'rgba(20, 237, 28, 0.5)', cursor: 'url(' + path + 'img/chalk-green.png), auto'},\n                { color: 'rgba(220, 133, 41, 0.5)', cursor: 'url(' + path + 'img/chalk-orange.png), auto'},\n                { color: 'rgba(220,0,220,0.5)', cursor: 'url(' + path + 'img/chalk-purple.png), auto'},\n                { color: 'rgba(255,220,0,0.5)', cursor: 'url(' + path + 'img/chalk-yellow.png), auto'}\n        ]\n    },\n    customcontrols: {\n        controls: [\n            { icon: '&lt;i class=\"fa fa-pen-square\"&gt;&lt;/i&gt;',\n              title: 'Toggle chalkboard (B)',\n              action: 'RevealChalkboard.toggleChalkboard();'\n            },\n            { icon: '&lt;i class=\"fa fa-pen\"&gt;&lt;/i&gt;',\n              title: 'Toggle notes canvas (C)',\n              action: 'RevealChalkboard.toggleNotesCanvas();'\n            }\n        ]\n    },\n    // ...\n\n});\n</code></pre>"},{"location":"plugin/chalkboard/#license","title":"License","text":"<p>MIT licensed</p> <p>Copyright (C) 2021 Asvin Goel</p>"},{"location":"plugin/chart/","title":"Chart","text":"<p>A plugin for Reveal.js allowing to easily add charts using Chart.js.</p> <p>Check out the live demo</p>"},{"location":"plugin/chart/#installation","title":"Installation","text":"<p>Copy the file <code>plugin.js</code> into the plugin folder of your reveal.js presentation, i.e. <code>plugin/chart</code>.</p> <p>Add the plugin and Chart.js to the dependencies in your presentation, as below.</p> <pre><code>&lt;script src=\"https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.2.0/chart.min.js\"&gt;&lt;/script&gt;\n&lt;script src=\"plugin/chart/plugin.js\"&gt;&lt;/script&gt;\n\n&lt;script&gt;\n    Reveal.initialize({\n        // ...\n        plugins: [ RevealChart ],\n        // ...\n    });\n&lt;/script&gt;\n</code></pre>"},{"location":"plugin/chart/#configuration","title":"Configuration","text":"<p>The plugin has several parameters that you can set for your presentation by providing an <code>chart</code> option in the reveal.js initialization options. Note that all configuration parameters are optional and the defaults of Chart.js will be used for parameters that are not specified.</p> <p><pre><code>Reveal.initialize({\n    // ...\n    chart: {\n        defaults: {\n            color: 'lightgray', // color of labels\n            scale: {\n                beginAtZero: true,\n                ticks: { stepSize: 1 },\n                grid: { color: \"lightgray\" } , // color of grid lines\n            },\n        },\n        line: { borderColor: [ \"rgba(20,220,220,.8)\" , \"rgba(220,120,120,.8)\", \"rgba(20,120,220,.8)\" ], \"borderDash\": [ [5,10], [0,0] ] },\n        bar: { backgroundColor: [ \"rgba(20,220,220,.8)\" , \"rgba(220,120,120,.8)\", \"rgba(20,120,220,.8)\" ]},\n        pie: { backgroundColor: [ [\"rgba(0,0,0,.8)\" , \"rgba(220,20,20,.8)\", \"rgba(20,220,20,.8)\", \"rgba(220,220,20,.8)\", \"rgba(20,20,220,.8)\"] ]},\n    },\n        // ...\n});\n</code></pre> The <code>defaults</code> parameter  will overwrite <code>Chart.defaults</code>. Furthermore, for any chart type, e.g. line, bar, etc., the parameters for the individual datasets can be specified. Where Chart.js allows to specify a single parameter for a particular dataset, the plugin allows to specify an array of values for this parameter, which will automatically be assigned to the different datasets. Note that if there are more datasets than elements in the array, the plugin will start again with the first value in the array.</p>"},{"location":"plugin/chart/#usage","title":"Usage","text":"<p>A chart can be included in a slide by adding a <code>canvas</code> element with the <code>data-chart</code> attribute set to the desired chart type.</p> <p>The chart can be configured within the canvas body by a JSON string embedded into an HTML comment.</p> <p><pre><code>&lt;canvas data-chart=\"line\" &gt;\n&lt;!--\n{\n \"data\": {\n  \"labels\": [\"January\",\" February\",\" March\",\" April\",\" May\",\" June\",\" July\"],\n  \"datasets\":[\n   {\n    \"data\":[65,59,80,81,56,55,40],\n    \"label\":\"My first dataset\",\"backgroundColor\":\"rgba(20,220,220,.8)\"\n   },\n   {\n    \"data\":[28,48,40,19,86,27,90],\n    \"label\":\"My second dataset\",\"backgroundColor\":\"rgba(220,120,120,.8)\"\n   }\n  ]\n }\n}\n--&gt;\n&lt;/canvas&gt;\n</code></pre> It is possible to provide the chart data by comma separated values and use the JSON string within the HTML comment to configure the chart layout.</p> <pre><code>&lt;canvas class=\"stretch\" data-chart=\"line\"&gt;\nMy first dataset, 65, 59, 80, 81, 56, 55, 40\n&lt;!-- This is a comment that will be ignored --&gt;\nMy second dataset, 28, 48, 40, 19, 86, 27, 90\n&lt;!--\n{\n \"data\" : {\n  \"labels\" : [\"Enero\", \"Febrero\", \"Marzo\", \"Avril\", \"Mayo\", \"Junio\", \"Julio\"],\n  \"datasets\" : [{ \"borderColor\": \"#0f0\", \"borderDash\": [\"5\",\"10\"] }, { \"borderColor\": \"#0ff\" } ]\n }\n}\n--&gt;\n&lt;/canvas&gt;\n</code></pre> <p>The layout configuration provided in <code>chart</code> parameter (see Configuration) will be used by default and only those parameters that are specified in a JSON string are used to overwrite the default values. If no JSON string is provided to configure the chart layout the default configuration is used. Note, that if no labels for the data points are provided by a JSON string, the plugin expects that the first row provides table headers.</p> <pre><code>&lt;canvas data-chart=\"line\"&gt;\nMonth, January, February, March, April, May, June, July\nMy first dataset, 65, 59, 80, 81, 56, 55, 40\nMy second dataset, 28, 48, 40, 19, 86, 27, 90\n&lt;/canvas&gt;\n</code></pre> <p>The chart data can also be provided in an external CSV file. To include external data, the filename must be specified using the <code>data-chart-src</code> attribute of the <code>canvas</code> element. The CSV file is expected to only contain data values, whereas options for drawing the chart can be given as described above.</p> <pre><code>&lt;canvas data-chart=\"bar\" data-chart-src=\"chart/data.csv\"&gt;\n&lt;!--\n{\n\"data\" : {\n\"datasets\" : [{ \"backgroundColor\": \"#0f0\" }, { \"backgroundColor\": \"#0ff\" } ]\n},\n\"options\": { \"scales\": { \"x\": { \"stacked\": true }, \"y\": { \"stacked\": true } } }\n}\n--&gt;\n&lt;/canvas&gt;\n</code></pre>"},{"location":"plugin/chart/#license","title":"License","text":"<p>MIT licensed</p> <p>Copyright (C) 2021 Asvin Goel</p>"},{"location":"plugin/customcontrols/","title":"Custom controls","text":"<p>This plugin allows to add responsive custom controls to reveal.js which allow arbitrary positioning, layout, and behaviour of the controls.</p> <p>Check out the live demo</p>"},{"location":"plugin/customcontrols/#installation","title":"Installation","text":"<p>Copy the files <code>plugin.js</code> and <code>style.css</code> into the plugin folder of your reveal.js presentation, i.e. <code>plugin/customcontrols</code> and load the plugin as shown below.</p> <pre><code>&lt;link rel=\"stylesheet\" href=\"plugin/customcontrols/style.css\"&gt;\n&lt;script src=\"plugin/customcontrols/plugin.js\"&gt;&lt;/script&gt;\n\n&lt;script&gt;\n    Reveal.initialize({\n        // ...\n        plugins: [ RevealCustomControls ],\n        // ...\n    });\n&lt;/script&gt;\n</code></pre> <p>Note, without configuration you need to add</p> <pre><code>&lt;link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css\"&gt;\n</code></pre> <p>between <code>&lt;head&gt;</code> and <code>&lt;/head&gt;</code> of your HTML file because the defaults use Font Awesome.</p>"},{"location":"plugin/customcontrols/#configuration","title":"Configuration","text":"<p>The plugin can be configured by adding custom controls and changing the layout of the slide number, e.g., by:</p> <pre><code>Reveal.initialize({\n    // ...\n  customcontrols: {\n        controls: [\n      {\n              id: 'toggle-overview',\n              title: 'Toggle overview (O)',\n              icon: '&lt;i class=\"fa fa-th\"&gt;&lt;/i&gt;',\n              action: 'Reveal.toggleOverview();'\n            },\n            { icon: '&lt;i class=\"fa fa-pen-square\"&gt;&lt;/i&gt;',\n              title: 'Toggle chalkboard (B)',\n              action: 'RevealChalkboard.toggleChalkboard();'\n            },\n            { icon: '&lt;i class=\"fa fa-pen\"&gt;&lt;/i&gt;',\n              title: 'Toggle notes canvas (C)',\n              action: 'RevealChalkboard.toggleNotesCanvas();'\n            }\n        ]\n    },\n    // ...\n\n});\n</code></pre> <p>The <code>id</code> and <code>title</code> are optional. The configuration should be self explaining and any number of controls can be added. The style file can be altered to control the layout and responsiveness of the custom controls.</p>"},{"location":"plugin/customcontrols/#license","title":"License","text":"<p>MIT licensed</p> <p>Copyright (C) 2020 Asvin Goel</p>"},{"location":"plugin/menu/","title":"reveal.js-menu","text":"<p>A slideout menu plugin for Reveal.js to quickly jump to any slide by title. Also optionally change the theme and set the default transition. Check out the live demo</p>"},{"location":"plugin/menu/#installation","title":"Installation","text":""},{"location":"plugin/menu/#bower","title":"Bower","text":"<p>Download and install the package in your project:</p> <p><code>bower install reveal.js-menu</code></p> <p>Add the plugin to your presentation, as below.</p> <pre><code>&lt;script src=\"bower_components/reveal.js-menu/menu.js\"&gt;&lt;/script&gt;\n&lt;script&gt;\n  Reveal.initialize({\n    plugins: [ RevealMenu ]\n  });\n&lt;/script&gt;\n</code></pre>"},{"location":"plugin/menu/#npm","title":"npm","text":"<p>Download and install the package in your project:</p> <p><code>npm install --save reveal.js-menu</code></p> <p>Add the plugin to your presentation, as below.</p> <pre><code>&lt;script src=\"node_modules/reveal.js-menu/menu.js\"&gt;&lt;/script&gt;\n&lt;script&gt;\n  Reveal.initialize({\n    plugins: [ RevealMenu ]\n  });\n&lt;/script&gt;\n</code></pre>"},{"location":"plugin/menu/#manual","title":"Manual","text":"<p>Copy this repository into the plugins folder of your reveal.js presentation, ie <code>plugins/menu</code>.</p> <p>Add the plugin to the dependencies in your presentation, as below.</p> <pre><code>&lt;script src=\"plugin/menu/menu.js\"&gt;&lt;/script&gt;\n&lt;script&gt;\n  Reveal.initialize({\n    plugins: [ RevealMenu ]\n  });\n&lt;/script&gt;\n</code></pre>"},{"location":"plugin/menu/#configuration","title":"Configuration","text":"<p>You can configure the menu for your presentation by providing a <code>menu</code> option in the reveal.js initialization options. Note that all config values are optional and will default as specified below.</p> <pre><code>Reveal.initialize({\n  // ...\n\n  menu: {\n    // Specifies which side of the presentation the menu will\n    // be shown. Use 'left' or 'right'.\n    side: 'left',\n\n    // Specifies the width of the menu.\n    // Can be one of the following:\n    // 'normal', 'wide', 'third', 'half', 'full', or\n    // any valid css length value\n    width: 'normal',\n\n    // Add slide numbers to the titles in the slide list.\n    // Use 'true' or format string (same as reveal.js slide numbers)\n    numbers: false,\n\n    // Specifies which slide elements will be used for generating\n    // the slide titles in the menu. The default selects the first\n    // heading element found in the slide, but you can specify any\n    // valid css selector and the text from the first matching\n    // element will be used.\n    // Note: that a section data-menu-title attribute or an element\n    // with a menu-title class will take precedence over this option\n    titleSelector: 'h1, h2, h3, h4, h5, h6',\n\n    // If slides do not have a matching title, attempt to use the\n    // start of the text content as the title instead\n    useTextContentForMissingTitles: false,\n\n    // Hide slides from the menu that do not have a title.\n    // Set to 'true' to only list slides with titles.\n    hideMissingTitles: false,\n\n    // Adds markers to the slide titles to indicate the\n    // progress through the presentation. Set to 'false'\n    // to hide the markers.\n    markers: true,\n\n    // Specify custom panels to be included in the menu, by\n    // providing an array of objects with 'title', 'icon'\n    // properties, and either a 'src' or 'content' property.\n    custom: false,\n\n    // Specifies the themes that will be available in the themes\n    // menu panel. Set to 'true' to show the themes menu panel\n    // with the default themes list. Alternatively, provide an\n    // array to specify the themes to make available in the\n    // themes menu panel, for example...\n    //\n    // [\n    //     { name: 'Black', theme: 'dist/theme/black.css' },\n    //     { name: 'White', theme: 'dist/theme/white.css' },\n    //     { name: 'League', theme: 'dist/theme/league.css' },\n    //     {\n    //       name: 'Dark',\n    //       theme: 'lib/reveal.js/dist/theme/black.css',\n    //       highlightTheme: 'lib/reveal.js/plugin/highlight/monokai.css'\n    //     },\n    //     {\n    //       name: 'Code: Zenburn',\n    //       highlightTheme: 'lib/reveal.js/plugin/highlight/zenburn.css'\n    //     }\n    // ]\n    //\n    // Note: specifying highlightTheme without a theme will\n    // change the code highlight theme while leaving the\n    // presentation theme unchanged.\n    themes: false,\n\n    // Specifies the path to the default theme files. If your\n    // presentation uses a different path to the standard reveal\n    // layout then you need to provide this option, but only\n    // when 'themes' is set to 'true'. If you provide your own\n    // list of themes or 'themes' is set to 'false' the\n    // 'themesPath' option is ignored.\n    themesPath: 'dist/theme/',\n\n    // Specifies if the transitions menu panel will be shown.\n    // Set to 'true' to show the transitions menu panel with\n    // the default transitions list. Alternatively, provide an\n    // array to specify the transitions to make available in\n    // the transitions panel, for example...\n    // ['None', 'Fade', 'Slide']\n    transitions: false,\n\n    // Adds a menu button to the slides to open the menu panel.\n    // Set to 'false' to hide the button.\n    openButton: true,\n\n    // If 'true' allows the slide number in the presentation to\n    // open the menu panel. The reveal.js slideNumber option must\n    // be displayed for this to take effect\n    openSlideNumber: false,\n\n    // If true allows the user to open and navigate the menu using\n    // the keyboard. Standard keyboard interaction with reveal\n    // will be disabled while the menu is open.\n    keyboard: true,\n\n    // Normally the menu will close on user actions such as\n    // selecting a menu item, or clicking the presentation area.\n    // If 'true', the sticky option will leave the menu open\n    // until it is explicitly closed, that is, using the close\n    // button or pressing the ESC or m key (when the keyboard\n    // interaction option is enabled).\n    sticky: false,\n\n    // If 'true' standard menu items will be automatically opened\n    // when navigating using the keyboard. Note: this only takes\n    // effect when both the 'keyboard' and 'sticky' options are enabled.\n    autoOpen: true,\n\n    // If 'true' the menu will not be created until it is explicitly\n    // requested by calling RevealMenu.init(). Note this will delay\n    // the creation of all menu panels, including custom panels, and\n    // the menu button.\n    delayInit: false,\n\n    // If 'true' the menu will be shown when the menu is initialised.\n    openOnInit: false,\n\n    // By default the menu will load it's own font-awesome library\n    // icons. If your presentation needs to load a different\n    // font-awesome library the 'loadIcons' option can be set to false\n    // and the menu will not attempt to load the font-awesome library.\n    loadIcons: true\n  }\n});\n</code></pre>"},{"location":"plugin/menu/#themes-stylesheet","title":"Themes Stylesheet","text":"<p>If you are using the themes panel you need to ensure the theme stylesheet in the presentation uses the <code>id=\"theme\"</code> attribute. For example\u2026</p> <pre><code>&lt;link rel=\"stylesheet\" href=\"css/theme/black.css\" id=\"theme\" /&gt;\n</code></pre> <p>If your themes configuration includes code highlight themes you need to ensure the highlights theme stylesheet in the presentation uses the <code>id=\"highlight-theme\"</code> attribute. For example\u2026</p> <pre><code>&lt;link\n  rel=\"stylesheet\"\n  href=\"plugin/highlight/zenburn.css\"\n  id=\"highlight-theme\"\n/&gt;\n</code></pre>"},{"location":"plugin/menu/#slide-titles","title":"Slide Titles","text":"<p>The slide titles used in the menu can be supplied explicitly or are taken directly from the presentation, using the following rules\u2026</p>"},{"location":"plugin/menu/#1-the-sections-data-menu-title-attribute","title":"1. The section\u2019s <code>data-menu-title</code> attribute.","text":"<p>If the slide\u2019s section element contains a <code>data-menu-title</code> attribute this will be used for the slide title in the menu. For example\u2026</p> <pre><code>&lt;section data-menu-title=\"Custom Menu Title\"&gt;\n  &lt;h1&gt;Title&lt;/h1&gt;\n  &lt;p&gt;...&lt;/p&gt;\n&lt;/section&gt;\n</code></pre>"},{"location":"plugin/menu/#2-any-element-with-the-class-menu-title","title":"2. Any element with the class <code>menu-title</code>.","text":"<p>If the slide\u2019s section contains an element with the class <code>menu-title</code> then the element\u2019s text will be used for the title. The first such element found will be used if there are more than one. Note the element need not be displayed to be used. For example\u2026</p> <pre><code>&lt;section&gt;\n  &lt;h1&gt;Title&lt;/h1&gt;\n  &lt;span class=\"menu-title\" style=\"display: none\"&gt;Custom Menu Title&lt;/span&gt;\n  &lt;p&gt;...&lt;/p&gt;\n&lt;/section&gt;\n</code></pre>"},{"location":"plugin/menu/#3-the-first-heading-found-or-a-custom-element-selector","title":"3. The first heading found or a custom element selector","text":"<p>The <code>titleSelector</code> option can be used to customise the elements that will be used to generate the slide titles in the menu. The default option selects the first heading element found in the slide. For example\u2026</p> <pre><code>&lt;section&gt;\n  &lt;h3&gt;This will be the slide title in the menu&lt;/h3&gt;\n  &lt;h1&gt;Title&lt;/h1&gt;\n  &lt;p&gt;...&lt;/p&gt;\n&lt;/section&gt;\n</code></pre> <p>Any valid CSS selector should work but note the selector will only be applied to elements contained within the slide section. You could use the <code>'h1'</code> selector to only use level 1 headings or <code>'p'</code> to use the first paragraph element. For example, <code>titleSelector: 'p.lead'</code> would be used like this\u2026</p> <pre><code>&lt;section&gt;\n  &lt;h1&gt;Title&lt;/h1&gt;\n  &lt;p class=\"lead\"&gt;This will be the slide title in the menu&lt;/p&gt;\n  &lt;p&gt;...&lt;/p&gt;\n&lt;/section&gt;\n</code></pre> <p>Using <code>titleSelector: ''</code> will ignore all elements and no title will be provided, unless the slide section contains a <code>data-menu-title</code> attribute or an element with the <code>menu-title</code> class.</p>"},{"location":"plugin/menu/#4-no-title-is-provided","title":"4. No title is provided","text":"<p>If no title can be found using the above methods, a default title incorporating the slide number will be used. For example, the following would result in a slide title in the format of \u2018Slide 12\u2019\u2026</p> <pre><code>&lt;section&gt;\n  &lt;p&gt;...&lt;/p&gt;\n&lt;/section&gt;\n</code></pre> <p>If the <code>hideMissingTitles</code> option is set to <code>true</code>, however, the slide will not be listed in the menu.</p>"},{"location":"plugin/menu/#custom-menu-panels","title":"Custom Menu Panels","text":"<p>Additional custom panels can be added the menu using the <code>custom</code> option.</p> <pre><code>Reveal.initialize({\n  // ...\n\n  menu: {\n    // ...\n\n    custom: [\n      {\n        title: 'Links',\n        icon: '&lt;i class=\"fa fa-external-link\"&gt;',\n        src: 'links.html'\n      },\n      {\n        title: 'About',\n        icon: '&lt;i class=\"fa fa-info\"&gt;',\n        content: '&lt;p&gt;This slidedeck is created with reveal.js&lt;/p&gt;'\n      }\n    ]\n  }\n});\n</code></pre> <p><code>title</code> and <code>icon</code> are used for the toolbar buttons at the top of the menu. There are two approaches you can use to provide content for the panels\u2026</p> <ul> <li>You can provide a URL in <code>src</code> to load html from another file.</li> <li>Alternatively, you can provide html in <code>content</code> and this will be added to the custom panel.</li> </ul>"},{"location":"plugin/menu/#custom-slide-menu-items","title":"Custom slide menu items","text":"<p>You can provide menu items in your custom panels using the following format. This allows you to define your own navigation links for your presentation.</p> <pre><code>&lt;h1&gt;Links&lt;/h1&gt;\n&lt;ul class=\"slide-menu-items\"&gt;\n  &lt;li class=\"slide-menu-item\"&gt;&lt;a href=\"#/transitions\"&gt;Transitions&lt;/a&gt;&lt;/li&gt;\n  &lt;li class=\"slide-menu-item\"&gt;&lt;a href=\"#/13\"&gt;Code highlighting&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n</code></pre> <p>You are not limited to linking to presentation slides. You can provide any link you wish.</p> <pre><code>&lt;h1&gt;External Links&lt;/h1&gt;\n&lt;ul class=\"slide-menu-items\"&gt;\n  &lt;li class=\"slide-menu-item\"&gt;\n    &lt;a href=\"https://github.com/denehyg/reveal.js-menu\"&gt;Reveal.js-menu&lt;/a&gt;\n  &lt;/li&gt;\n  &lt;li class=\"slide-menu-item\"&gt;\n    &lt;a href=\"https://github.com/hakimel/reveal.js\"&gt;Reveal.js&lt;/a&gt;\n  &lt;/li&gt;\n&lt;/ul&gt;\n</code></pre> <p>Using menu items enables keyboard navigation of your links as with the other panels. However, you don\u2019t have to use menu items for your links. You can simply provide standard links and unordered lists in your html. Notice you can provide your custom menu items mixed with other html if you wish.</p>"},{"location":"plugin/menu/#ready-event","title":"Ready Event","text":"<p>A \u2018menu-ready\u2019 event is fired when reveal.js-menu has loaded all non-async dependencies and is ready to start navigating.</p> <pre><code>Reveal.addEventListener('menu-ready', function (event) {\n  // your code\n});\n</code></pre>"},{"location":"plugin/menu/#api","title":"API","text":"<p>The <code>RevealMenu</code> object exposes a JavaScript API for controlling the menu:</p> Function Description toggle(event) Toggles the open state of the menu, ie open if it is closed, and close if it is open openMenu(event) Opens the menu closeMenu(event, force) Closes the menu. To force the menu to close (ie when <code>sticky</code> option is <code>true</code>) call <code>closeMenu(null, true)</code> openPanel(event, ref) Opens the menu to a specific panel, passing the name of the panel or the panel element itself isOpen() Returns true if the menu is open initialiseMenu() Initialises the menu if it has not already been initialised. Used in conjunction with the <code>delayInit</code> option isMenuInitialised() Returns true if the menu has been initialised"},{"location":"plugin/menu/#compatibility","title":"Compatibility","text":"<p>reveal.js-menu v2.0 is built for reveal.js v4. It will not work with reveal.js v3. If you require a menu for reveal.js v3 you will need to install reveal.js-menu v1.2.0.</p> <p>v2.0 also introduces API changes that are not backwards compatible. <code>init()</code> has been renamed to <code>initMenu()</code> to deconflict with the reveal.js v4 plugin API. <code>isInit()</code> has also been changed to <code>isMenuInitialised()</code>.</p>"},{"location":"plugin/menu/#license","title":"License","text":"<p>MIT licensed</p> <p>Copyright (C) 2020 Greg Denehy</p>"},{"location":"plugin/menu/CONTRIBUTING/","title":"CONTRIBUTING","text":""},{"location":"plugin/menu/CONTRIBUTING/#contributing","title":"Contributing","text":""},{"location":"plugin/menu/CONTRIBUTING/#bug-reports","title":"Bug Reports","text":"<p>When reporting a bug make sure to include information about which browser and operating system you are on as well as the necessary steps to reproduce the issue. If possible please include a link to a sample presentation where the bug can be tested.</p>"},{"location":"plugin/menu/CONTRIBUTING/#pull-requests","title":"Pull Requests","text":"<ul> <li>Should follow the coding style of the file you work in</li> <li>Should be made towards the dev branch</li> <li>Should be submitted from a feature/topic branch (not your master)</li> </ul>"}]}
>>>>>>> Stashed changes
